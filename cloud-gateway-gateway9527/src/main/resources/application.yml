server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  discovery:
    locator:
      enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
  cloud:
    gateway:
      routes:
        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://cloud-provider-payment #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**         # 断言，路径相匹配的进行路由

        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://cloud-provider-payment #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
#            - After=2021-07-18T08:20:19.438+08:00[Asia/Shanghai]         # 断言，路径相匹配的进行路由
#            - Before=2021-09-05T15:10:03.685+08:00[Asia/Shanghai]         # 断言，路径相匹配的进行路由
#            - Between=2021-07-18T18:20:19.438+08:00[Asia/Shanghai],2021-09-05T15:10:03.685+08:00[Asia/Shanghai]
#            - Cookie=username,zzyy
#            - Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.atguigu.com
#            - Method=GET
#            - Query=username, \d+  # 要有参数名username并且值还要是整数才能路由
#          filters:
#            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
eureka:
  instance:
    hostname: cloud-gateway-service
  client:
#    register-with-eureka: true     #false表示不向注册中心注册自己。
#    fetch-registry: true     #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    service-url:
      register-with-eureka: true     #false表示不向注册中心注册自己。
      fetch-registry: true     #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
      defaultZone: http://localhost:7001/eureka/